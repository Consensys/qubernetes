<%-
  def set_node_template_vars(values)
    @Node_UserIdent        = values["Node_UserIdent"]
    @Node_Key_Dir          = values["Key_Dir"]
    return
  end
-%>
vanity = "0x00"
validators = [
<%-
  @nodes.each do |node|
    set_node_template_vars(node)
    puts(@Key_Dir_Base + "/" + @Node_Key_Dir + "/nodekey")
    File.open(@Key_Dir_Base + "/" + @Node_Key_Dir + "/nodekey", "r") do |f|
       f.each_line do |nodekey|
         nodeAcct=`ethkey generate tmpkey.json --passwordfile #{@Key_Dir_Base}/#{@Node_Key_Dir}/password.txt --privatekey #{@Key_Dir_Base}/#{@Node_Key_Dir}/nodekey | sed 's/Address: //g' | sed 's/}//g'`
         `rm tmpkey.json`

          puts("node account for Istanbul is: " + nodeAcct)

         nodeAcct=nodeAcct.strip -%>
<%- if node["type"] == "validator" -%>
"<%=nodeAcct%>",
<%- end -%>
<%-
       end
    end
  end
-%>
<%- if  @external_nodes -%>
<%-  @external_nodes.each do |extnode|
 # this is to get around a yaml parsing issue, qctl uses github.com/urfave/cli/v2 which does not preserve double quotes,
 # and if a hex value is stored in yaml without it will be evaluated to a Bignum, Node_Acct_Addr must be set as hex numbers
 # without quotes, e.g.0xDEe962299b55dA670fC70702e626ac9009AE3aC7, and then converted back to hex here.
   nodekeyAddr = extnode["Node_Acct_Addr"]
   # check if the nodekey address is not a hex string, if not we assume it has been converted to a BigNum
   # and convert it back to a hex.
   nodekeyAddrStr = nodekeyAddr.to_s
   if nodekeyAddrStr[0..1] != "0x"
    # need a hexicdemical of length 40 (pad with leading 0s)
    # 0x078426792F49BF76A94CFD2A1A35EBE8832DE3F1 vs 0x78426792F49BF76A94CFD2A1A35EBE8832DE3F1
    nodekeyAddr = "%040X" % nodekeyAddr
    nodekeyAddr = "0x" + nodekeyAddr
   end
   puts("external node account for Istanbul: " + nodekeyAddr)
 -%>
"<%=nodekeyAddr %>",
<%- end -%>
<%- end -%>
]