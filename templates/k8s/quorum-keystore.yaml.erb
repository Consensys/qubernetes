<%-
# Create Kubernetes resources for quorum keys:
#   nodekey (geth)
#   keystore account key (geth)
#   transaction manager key `tm` (quorum: constellation | tessera)
# keys are named the same inside their respective directories.
-%>


<%- @nodes.each do |node| -%>
<%= set_node_template_vars(node) -%>
<%- if @Tm_Name != "none" -%>
# quorum transaction manager keys transaction manager key: used for private transactions.
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: <%= @Node_UserIdent %>-tm-key-config
  <%= @Namespace %>
  labels:
    app: qubernetes
    name: <%= @Node_UserIdent %>-tm-key-config
data:
  tm.key: |-
<%- File.readlines("#{@Key_Dir_Base}/#{@Node_Key_Dir}/tm.key").each do |line| -%>
    <%= line -%>
<% end -%>

  tm.pub: |-
<%- File.readlines("#{@Key_Dir_Base}/#{@Node_Key_Dir}/tm.pub").each do |line| -%>
    <%= line -%>
<% end -%>
<%- end -%>
---
# nodekey private to the node, used to verify identity.
apiVersion: v1
kind: ConfigMap
metadata:
  name: <%= @Node_UserIdent %>-nodekey-config
  <%= @Namespace %>
  labels:
    app: qubernetes
    name: <%= @Node_UserIdent %>-nodekey-config
data:
  nodekey: |
<%- File.readlines("#{@Key_Dir_Base}/#{@Node_Key_Dir}/nodekey").each do |line| -%>
    <%= line -%>
<% end -%>

# Only IBFT / istanbul networks need access to the nodekey address.
<%- if (@Consensus == "istanbul" || @Consensus == "qbft") && File.file?("#{@Key_Dir_Base}/#{@Node_Key_Dir}/nodekeyaddress") -%>
---
# nodekey address public and used to generate istanbul-validator-config.toml
apiVersion: v1
kind: ConfigMap
metadata:
  name: <%= @Node_UserIdent %>-nodekey-address-config
    <%= @Namespace %>
  labels:
    app: qubernetes
    name: <%= @Node_UserIdent %>-nodekey-address-config
data:
  nodekey: |
      <%- File.readlines("#{@Key_Dir_Base}/#{@Node_Key_Dir}/nodekeyaddress").each do |line| -%>
      <%= line -%>
    <% end -%>
<%- end -%>

---
# enode Id
apiVersion: v1
kind: ConfigMap
metadata:
  name: <%= @Node_UserIdent %>-enode-config
  <%= @Namespace %>
  labels:
    app: qubernetes
    name: <%= @Node_UserIdent %>-enode-config
data:
  enode: |
<%- File.readlines("#{@Key_Dir_Base}/#{@Node_Key_Dir}/enode").each do |line| -%>
    <%= line -%>
<% end -%>

---
# ethereum / geth account keys (keystore)
# @Keystore_File=Dir[@Key_Dir_Base + "/" + @Node_Key_Dir + "/UTC*"][0]
apiVersion: v1
kind: ConfigMap
metadata:
  name: <%= @Node_UserIdent %>-account-key-config
  <%= @Namespace %>
  labels:
    app: qubernetes
    name: <%= @Node_UserIdent %>-account-key-config
data:
  key: |-
<%- @Keystore_File=@Key_Dir_Base + "/" + @Node_Key_Dir + "/acctkeyfile.json" %>
<%- File.readlines("#{@Keystore_File}").each do |line| -%>
    <%= line -%>
<% end -%>

# end node
<% end %>
