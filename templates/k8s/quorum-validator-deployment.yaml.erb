#<%- File.readlines("#{@Key_Dir_Base}/#{@Node_Key_Dir}/enode").each do |line| -%><%= line -%><% end -%>
<%
  # We need to obtain the IPs for constellation only, which we can obtain from the env variable
  # ${Service_Prefix}_SERVICE_HOST which holds the IP of the quorum service.
  # note: this is only needed for constellation, as constellation does not support hostnames. support for constellation may go away in the future.
  @Service_Prefix = (@Node_UserIdent.upcase).gsub("-", "_")

  # the rest of the node variable are set in qubernetes files that uses this file.
  # see: set_node_template_vars(node) in qubernetes file.
%>

<%
 @Security_Context = []
 if @config["k8s"] and @config["k8s"]["securityContext"]
   @Security_Context = @config["k8s"]["securityContext"]
 end
%>
# The quorum deployment consists of
# 1. the transaction manager / private tx container (constellation or tessera)
# 2. the quorum node container

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: <%= @Node_UserIdent %>-deployment
  <%= @Namespace %>
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      name: <%= @Node_UserIdent %>-deployment
  template:
    metadata:
      name:  <%= @Node_UserIdent %>-deployment
      labels:
        app: qubernetes
        tier: backend
        name: <%= @Node_UserIdent %>-deployment
    spec:
      securityContext:
      <%- @Security_Context.each do |entry| -%>
        <%= entry[0] %>: <%= entry[1] %>
      <%- end -%>
      initContainers:
      - name: quorum-genesis-init-container
        <%- if @Quorum_Docker_Repo_Full != "" -%>
        image: <%= @Quorum_Docker_Repo_Full %>
        imagePullPolicy: Never
        <%- else -%>
        image: <%= @Quorum_Docker_Repo %>/quorum:<%= @Quorum_Version %>
        <%- end -%>
        command: [ "sh" ]
        args:
        - "-cx"
        - "if [ ! -f $QUORUM_DATA_DIR/genesis_created ]; then
              /usr/local/bin/geth --datadir $QUORUM_DATA_DIR init /etc/quorum/genesis/genesis-geth.json;
              date > $QUORUM_DATA_DIR/genesis_created;
           fi;
           cp -r <%= @Node_DataDir %>/contracts-tmp <%= @Node_DataDir %>/contracts;
           chmod 755  <%= @Node_DataDir %>/contracts/runscript.sh;
          "
        env:
          - name: QUORUM_DATA_DIR
            value: <%= @Node_DataDir %>/dd
          - name: QHOME
            value: <%= @Node_DataDir %>
        volumeMounts:
        - name: quorum-persistent-storage
          mountPath:  <%= @Node_DataDir %>
          subPath: <%= @Node_UserIdent %>
        - name: genesis-config-persistent-storage
          mountPath: /etc/quorum/genesis/genesis-geth.json
          subPath: genesis-geth.json
        - name: contracts-config
          mountPath: <%= @Node_DataDir%>/contracts-tmp
          readOnly: false
      containers:
      - name: quorum
        <%- if @Quorum_Docker_Repo_Full != "" -%>
        image: <%= @Quorum_Docker_Repo_Full %>
        imagePullPolicy: Never
        <%- else -%>
        image: <%= @Quorum_Docker_Repo %>/quorum:<%= @Quorum_Version %>
        <%- end -%>
        readinessProbe:
          exec:
            command:
              - ls
              - $(QHOME)/dd/geth.ipc
          initialDelaySeconds: 20
          periodSeconds: 3
        command: [ "sh" ]
        args:
        - "-cx"
        - "
           apk add jq;

           ln -s $QUORUM_HOME/permission-nodes/permissioned-nodes.json $QUORUM_DATA_DIR/permissioned-nodes.json;
           ln -s $QUORUM_HOME/permission-nodes/permissioned-nodes.json $QUORUM_DATA_DIR/static-nodes.json;

           rm -r <%= @Node_DataDir %>/contracts-tmp;
           cat /etc/quorum/genesis/genesis-geth.json;

           chmod 644 $QUORUM_DATA_DIR/keystore/key;
           
           touch $QUORUM_DATA_DIR/password.txt;
           NETWORK_ID=<%= @Geth_Network_Id %>
           RPC_APIS=admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum
         <%- if @Consensus == "raft" -%>
           <%-# --raftdnsenable is need for adding additional nodes with hostnames. Without this node the network will start up fine, but adding nodes with enode host name URL will fail. -%>
           args=\" --gcmode archive --raft  --raftport <%= @Raft_Port %> --raftdnsenable \";
           RPC_APIS=\"$RPC_APIS,raft\";
         <%- elsif @Consensus == "istanbul" || @Consensus == "qibft" -%>
           args=\" --gcmode archive --istanbul.blockperiod 3 --syncmode full --mine --minerthreads 1 \";
           RPC_APIS=\"$RPC_APIS,istanbul\";
         <%- elsif @Consensus == "clique" -%>
           args=\" --gcmode archive --syncmode full --mine --minerthreads 1 \";
           RPC_APIS=\"$RPC_APIS,clique\";
         <%- end -%>
         <%- if @Quorum_Version >= "2.6.0" -%>
           args=\"$args --allow-insecure-unlock \";
         <%- end -%>
           /usr/local/bin/geth \
           --datadir $QUORUM_DATA_DIR \
           $args \
           --permissioned \
           --nodiscover \
           --nat=none \
           --verbosity <%= @Geth_Verbosity %> \
           --networkid $NETWORK_ID \
           --unlock 0 \
           --emitcheckpoints \
           --rpc \
           --rpcaddr 0.0.0.0 \
           --rpcport <%= @Node_RPCPort %> \
           --rpcapi $RPC_APIS \
           --wsapi $RPC_APIS \
           --wsport <%= @Node_WSPort %> \
           --port <%= @NodeP2P_ListenAddr %> \
      <%- if @config["prometheus"] -%>
         <%- if @config["prometheus"]["monitor_params_geth"]-%>
            <%= @config["prometheus"]["monitor_params_geth"]%> \
         <%- else -%>
           --metrics --metrics.expensive --pprof --pprofaddr=0.0.0.0 \
         <%- end -%>
      <%- end -%>
           <%= @Geth_Startup_Params %> \
           --password $QUORUM_DATA_DIR/password.txt 2>&1 | tee -a <%= @Node_DataDir%>/logs/quorum.log;"
        ports:
          - containerPort: <%= @Raft_Port %>
          - containerPort: <%= @Node_RPCPort %>
          - containerPort: <%= @Node_WSPort %>
          - containerPort: <%= @NodeP2P_ListenAddr %>
        <% if @config["prometheus"] %>
          - containerPort: 6060
        <% end %>
        env:
        - name: PRIVATE_CONFIG
          value: ignore
        - name: QUORUM_DATA_DIR
          value: <%= @Node_DataDir %>/dd
        - name: QUORUM_HOME
          value: <%= @Node_DataDir %>
        - name: QHOME
          value: <%= @Node_DataDir %>
        - name: THIS_NODE_ID
          value: <%= @Node_UserIdent%>
        - name: THIS_ENODE
          value: <%- File.readlines("#{@Key_Dir_Base}/#{@Node_Key_Dir}/enode").each do |line| -%><%= line -%><% end -%>
        volumeMounts:
        - name: quorum-persistent-storage
          mountPath: <%= @Node_DataDir%>
          subPath: <%= @Node_UserIdent %>
        - name: quorum-persistent-storage
          mountPath: <%= @Node_DataDir%>/tm
          subPath: <%= @Node_UserIdent %>-tm
        - name: quorum-persistent-storage
          mountPath: <%= @Node_DataDir %>/logs
          subPath: <%= @Node_UserIdent %>-logs
        - name: genesis-config-persistent-storage
          mountPath: /etc/quorum/genesis/genesis-geth.json
          subPath: genesis-geth.json
        - name: quorum-key-config-persistent-storage
          mountPath: <%= @Node_DataDir%>/dd/keystore/key
          subPath: key
        - name: quorum-nodekey
          mountPath: <%= @Node_DataDir%>/dd/geth/nodekey
          subPath: nodekey
        - name: quorum-enode
          mountPath: <%= @Node_DataDir%>/dd/geth/enode
          subPath: enode
        - name: quorum-permissioned-config
          mountPath: <%= @Node_DataDir%>/permission-nodes
        - name: geth-helpers
          mountPath: /geth-helpers
        <%- if @Consensus == "istanbul" || @Consensus == "qibft" -%>
        - name: istanbul-validator-config
          mountPath: <%= @Node_DataDir%>/istanbul-validator-config.toml
        - name: node-management
          mountPath: <%= @Node_DataDir%>/node-management/ibft_propose.sh
          subPath: ibft_propose.sh
        - name: node-management
          mountPath: <%= @Node_DataDir%>/node-management/ibft_propose_all.sh
          subPath: ibft_propose_all.sh
        <%- end -%>
        <%- if @Consensus == "raft" -%>
        - name: node-management
          mountPath: <%= @Node_DataDir%>/node-management/raft_add_all_permissioned.sh
          subPath: raft_add_all_permissioned.sh
        <%- end -%>
      volumes:
      - name: quorum-permissioned-config
        configMap:
          name: quorum-permissioned-config
          items:
          - key: permissioned-nodes.json
            path: permissioned-nodes.json
      - name: genesis-config-persistent-storage
        configMap:
          name: genesis-config
          items:
          - key: genesis-geth.json
            path: genesis-geth.json
      - name: contracts-config
        configMap:
          name: contracts-config
      - name: quorum-key-config-persistent-storage
        configMap:
          name: <%= @Node_UserIdent %>-account-key-config
          items:
          - key: key
            path: key
      - name: quorum-nodekey
        configMap:
          name: <%= @Node_UserIdent %>-nodekey-config
          items:
          - key: nodekey
            path: nodekey
      - name: quorum-enode
        configMap:
          name: <%= @Node_UserIdent %>-enode-config
          items:
            - key: enode
              path: enode
      - name: geth-helpers
        configMap:
          name: geth-helpers
          items:
            - key: geth-attach.sh
              path: geth-attach.sh
            - key: geth-exec.sh
              path: geth-exec.sh
          defaultMode: 0777
      <%- if @Consensus == "istanbul" || @Consensus == "qibft" -%>
      - name: istanbul-validator-config
        configMap:
          name: istanbul-validator-config.toml
      - name: node-management
        configMap:
           name: node-management
           items:
           - key: ibft_propose.sh
             path: ibft_propose.sh
           - key: ibft_propose_all.sh
             path: ibft_propose_all.sh
           defaultMode: 0777
      <%- end -%>
      <%- if @Consensus == "raft" -%>
      - name: node-management
        configMap:
          name: node-management
          items:
            - key: raft_add_all_permissioned.sh
              path: raft_add_all_permissioned.sh
          defaultMode: 0777
       <%- end -%>
      # PVC (configurable) https://kubernetes.io/docs/concepts/storage/persistent-volumes/#claims-as-volumes
      - name: quorum-persistent-storage
        persistentVolumeClaim:
          claimName: <%= @Node_UserIdent %>-pvc
