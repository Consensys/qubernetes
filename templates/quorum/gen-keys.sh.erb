#!/bin/bash

<% @Node_Dirs = "" %>

<%- @nodes.each do |node|
      set_node_template_vars(node)
      @Node_Dirs=@Node_Dirs + "," + @Node_Key_Dir
    end
    @Node_Dirs[0]=''
-%>

NODE_DIRS=<%= @Node_Dirs %>

<%- if @Key_Dir_Base[0] == '/' %>
BASE_DIR=<%= @Key_Dir_Base %>
<%- else %>
BASE_DIR=$(pwd)/<%= @Key_Dir_Base %>
<%- end %>

# try to use openSSL to generate tessera keys, used in docker container.
TESSERA_KEY_GEN_CMD="$(pwd)/templates/quorum/tessera-keygen.sh --keyName tm"
# however, if TESSERA_JAR env var is set, then use tessera to generate the key, e.g. on mac or other local env.
if [[ -n  "$TESSERA_JAR" ]]; then
  TESSERA_KEY_GEN_CMD="java -jar ${TESSERA_JAR} keygen --keyout tm"
fi

mkdir -p $BASE_DIR
IFS=', ' read -r -a array <<< "$NODE_DIRS"


for node_key_dir in "${array[@]}"; do
  KEY_DIR=$BASE_DIR/$node_key_dir
  echo "KEY DIR IS $KEY_DIR"
  ## If key dir exists, skip it.

  if [ ! -d $KEY_DIR ]; then
    pushd .
    shopt -s expand_aliases
    mkdir -p $KEY_DIR
    cd $KEY_DIR
    if [[ -n  TESSERA_JAR ]]; then
      echo | $TESSERA_KEY_GEN_CMD
    else
      $TESSERA_KEY_GEN_CMD
    fi
    touch password.txt
    #geth account new --keystore $KEY_DIR --password password.txt
    ethkey generate $KEY_DIR/acctkeyfile.json --passwordfile password.txt
    bootnode -genkey nodekey
    bootnode  -nodekeyhex $(cat nodekey) -writeaddress > enode
    # Only IBFT / istanbul networks need access to the nodekey address.
<%- if @Consensus == "istanbul" || @Consensus == "qbft" -%>
    # save nodekey address (used for istanbul-validator-config.toml)
    ethkey generate nodekeyacct.json --passwordfile password.txt --privatekey nodekey | sed 's/Address: //g' | sed 's/}//g' > nodekeyaddress
<%- end -%>
    popd
  else
    echo "Key Dir exists! Skipping creating new key in $KEY_DIR"
  fi
done
